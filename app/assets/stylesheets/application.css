/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

 :root {
    --bg1: rgb(28, 27, 34);
    --bg2: rgb(43, 42, 54);
    --bg3: rgb(66, 65, 77);

    --text1: rgb(183, 182, 191);
    --text2: rgb(245, 245, 245);

    --border: rgb(72, 72, 78);

    --shadow1: rgba(0, 0, 0, 0.35) 0px 5px 15px;
}

html, body {
    background: var(--bg1);
    color: var(--text1);
    width: 100%;
    height: 100%;
    overflow: hidden;
    padding: 0;
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
}

/* Specific */
.title {
    color: var(--text2);
    font-weight: bold;
    font-size: x-large;
    padding: 5px 20px 5px 20px;
}

.title::before {
    content: "//";
    padding-right: 5px;
    color: var(--text1);
    float: left;
}

.bg {
    width: 100%;
    height: 100%;
}

.category {
    width: fit-content;
    height: fit-content;
    padding: 20px 15px 20px 15px;
}

.category *.inner-category-container > *:nth-child(2n) {
    /* Even Children */
    background: var(--bg1);
}

.category *.inner-category-container > *:not(:nth-child(2n)) {
    /* Odd Children */
    background: var(--bg2);
}

.category *.inner-category-container > * {
    transition-duration: 75ms;
    padding: 2.5px 10px 2.5px 10px;
    border-radius: 6px;
    color: var(--text1);
    text-decoration: none;
    font-size: 15px;
}

.category *.inner-category-container > *:hover {
    color: var(--text2);
}

.category *.category-title {
    color: var(--text2);
    font-weight: bold;
    text-align: left;
    padding: 2.5px 10px 7.5px 10px;
}

.category *.category-title::before {
    content: "/";
    padding-right: 5px;
    color: var(--text1);
    float: left;
}

.category *.category-title::after {
    content: "/";
    padding-left: 5px;
    color: var(--text1);
    float: right;
}

/* Utilities */
.v-box {
    display: flex;
    flex-direction: column;
}

.h-box {
    display: flex;
    flex-direction: row;
}

.w-fit {
    width: fit-content;
}

.w-fill {
    width: 100%;
}

.centre {
    justify-content: center;
}

p {
    padding: 0;
    margin: 0;
}

.monokai-0 {
    color: #ff6188 !important;
}

.monokai-1 {   
    color: #fc9867 !important;
}

.monokai-2 {   
    color: #ffd866 !important;
}

.monokai-3 {   
    color: #a9dc76 !important;
}

.monokai-4 {   
    color: #78dce8 !important;
}

.monokai-5 {   
    color: #ab9df2 !important;
}

.commandbar {
    border-radius: 6px;
    padding: 5px 10px 5px 10px;
    margin: 0px 15px 30px 15px;
    background: var(--bg2);
    border: none !important;
    outline: none !important;
    color: var(--text2);
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    font-size: 15px;
    transition-duration: 100ms;
}

.commandbar::placeholder {
    color: var(--text1);
}

.commandbar:focus {
    box-shadow: var(--shadow1);
}

.dialog {
    background: var(--bg3);
    border: none;
    border-radius: 6px;
    box-shadow: var(--shadow1);
    z-index: 99;
    transition-duration: 300ms;
    opacity: 100%;
    pointer-events: auto;
}

.blurred-backdrop {
    position: absolute;
    width: 100vw;
    height: 100vh;
    backdrop-filter: blur(5px);
    z-index: 98;
    transition-duration: 100ms;
    pointer-events: none;
}

.hidden {
    pointer-events: none;
    opacity: 0% !important;
}

.top-button-holder {
    position: absolute;
    padding: 10px;
    background: var(--bg2);
    width: calc(100% - 20px); /* keep padding into consideration */
    display: flex;
    flex-direction: row;
}

.flex-left {
    margin-right: auto;
}

.flex-left > * {
    margin-right: 5px;
}

.flex-right {
    margin-left: auto;
}

.flex-right > * {
    margin-left: 5px;
}

.minimal-button {
    background: none;
    border: none;
    color: var(--text1);
    transition-duration: 100ms;
}

.minimal-button:hover {
    color: var(--text2);
    cursor: pointer;
}